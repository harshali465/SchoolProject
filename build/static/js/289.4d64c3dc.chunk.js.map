{"version":3,"file":"static/js/289.4d64c3dc.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/src/free/cil-user.ts","views/Register.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts"],"sourcesContent":["export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n","import React, { useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // accepting data from the inputs\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const validationErrors = validateForm(formData);\r\n\r\n    if (validationErrors.length === 0) {\r\n      // ready to be shipped\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          \"http://18.118.42.224:3001/api/v1/users/signup\",\r\n          {\r\n            name: formData.name,\r\n            email: formData.email,\r\n            password: formData.password,\r\n            passwordConfirm: formData.passwordConfirm,\r\n          }\r\n        );\r\n        const token = res.data.token;\r\n        localStorage.setItem(\"accessToken\", token);\r\n        console.log(\"sucessfully registered\");\r\n        navigate(\"/\");\r\n      } catch (error) {\r\n        console.error(\"signup failed\", error);\r\n      }\r\n\r\n      setFormData({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n      });\r\n      setErrors([]);\r\n    } else {\r\n      // Data is not valid, set the validation errors\r\n      setErrors(validationErrors);\r\n    }\r\n  };\r\n\r\n  // validating credentials\r\n  const validateForm = (data) => {\r\n    const errors = [];\r\n\r\n    if (!data.name.trim()) {\r\n      errors[0] = \"Name is required\";\r\n    }\r\n\r\n    if (!data.email.trim()) {\r\n      errors[1] = \"Email is required\";\r\n    } else if (!isValidEmail(data.email)) {\r\n      errors[2] = \"Invalid email format\";\r\n    }\r\n\r\n    if (!data.password) {\r\n      errors[3] = \"Password is required\";\r\n    } else if (data.password.length < 8) {\r\n      errors[4] = \"Password must be at least 8 characters\";\r\n    }\r\n\r\n    if (data.password !== data.passwordConfirm) {\r\n      errors[5] = \"Passwords do not match\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const isValidEmail = (email) => {\r\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={9} lg={7} xl={6}>\r\n            <CCard className=\"mx-4\">\r\n              <CCardBody className=\"p-4\">\r\n                <CForm>\r\n                  <h1>Register</h1>\r\n                  <p className=\"text-medium-emphasis\">Create your account</p>\r\n                  <CInputGroup className=\"\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilUser} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      placeholder=\"Username\"\r\n                      autoComplete=\"username\"\r\n                      name=\"name\"\r\n                      value={formData.name}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </CInputGroup>\r\n                  <div className=\"err mb-3\" style={{ color: \"#ff3333\" }}>\r\n                    {errors[0] && <div>{errors[0]}</div>}\r\n                  </div>\r\n\r\n                  <CInputGroup className=\"\">\r\n                    <CInputGroupText>@</CInputGroupText>\r\n                    <CFormInput\r\n                      placeholder=\"Email\"\r\n                      autoComplete=\"email\"\r\n                      name=\"email\"\r\n                      value={formData.email}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </CInputGroup>\r\n                  <div className=\"err mb-3\" style={{ color: \"#ff3333\" }}>\r\n                    {errors[1] ||\r\n                      (errors[2] && <div>{errors[1] || errors[2]}</div>)}\r\n                  </div>\r\n                  <CInputGroup className=\"\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilLockLocked} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      autoComplete=\"new-password\"\r\n                      name=\"password\"\r\n                      value={formData.password}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </CInputGroup>\r\n                  <div className=\"err mb-3\" style={{ color: \"#ff3333\" }}>\r\n                    {errors[3] ||\r\n                      (errors[4] && <div>{errors[3] || errors[4]}</div>)}\r\n                  </div>\r\n                  <CInputGroup className=\"\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilLockLocked} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type=\"password\"\r\n                      placeholder=\"Repeat password\"\r\n                      autoComplete=\"new-password\"\r\n                      name=\"passwordConfirm\"\r\n                      value={formData.passwordConfirm}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </CInputGroup>\r\n                  <div className=\"err mb-4\" style={{ color: \"#ff3333\" }}>\r\n                    {errors[5] && <div>{errors[5]}</div>}\r\n                  </div>\r\n                  <div className=\"d-grid\">\r\n                    <CButton color=\"success\" onClick={handleSubmit}>\r\n                      Create Account\r\n                    </CButton>\r\n                  </div>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n"],"names":["cilUser","navigate","useNavigate","_useState","useState","name","email","password","passwordConfirm","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","validationErrors","res","token","wrap","_context","prev","next","preventDefault","validateForm","length","axios","post","sent","data","localStorage","setItem","console","log","t0","error","stop","_x","apply","arguments","trim","isValidEmail","test","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","_jsxs","CForm","CInputGroup","CInputGroupText","CIcon","icon","CFormInput","placeholder","autoComplete","onChange","style","color","cilLockLocked","type","CButton","onClick"],"sourceRoot":""}